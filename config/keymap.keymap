#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Escape {
            bindings = <&kp ESCAPE>;
            key-positions = <16 15>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&none           &kp Q  &kp W  &kp E  &kp R             &kp T             &kp Y          &kp U      &kp I      &kp O       &kp P      &kp SLASH
&lt 2 TAB       &kp A  &kp S  &kp D  &kp F             &kp G             &kp H          &kp J      &kp K      &kp L       &kp COLON  &kp ENTER
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C  &kp V             &kp B             &kp N          &kp M      &kp COMMA  &kp PERIOD  &kp MINUS  &kp RSHIFT
&none           &none  &none  &none  &kp LEFT_COMMAND  &lt 1 UNDERSCORE  &kp BACKSPACE  &kp SPACE             &none       &none      &none
            >;
        };

        layer_1 {
            bindings = <
&none  &none  &none  &none  &none  &none  &none  &none     &none     &none   &none      &none
&none  &none  &none  &none  &none  &none  &none  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &none
&none  &none  &none  &none  &none  &none  &none  &none     &none     &none   &none      &none
&none  &none  &none  &none  &none  &none  &none  &none               &none   &none      &none
            >;
        };

        layer_2 {
            bindings = <
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none         &none  &none  &none
            >;
        };

        layer_3 {
            bindings = <
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none         &none  &none  &none
            >;
        };
    };
};
